---
layout: post
title: leppard
category: project
---
<!doctype html>
<html>
<head>
	<link rel='stylesheet' href='http://itsjoesullivan.github.io/flat.css/flat.css' />
</head>
<body style="margin-bottom: 60px">
<div class="content w60">

<h1>Leppard</h1>
<hr>

##tl;dr

Music interfaces should more closely couple touch and sound. <a target="_blank" href="https://chrome.google.com/webstore/detail/leppard/elinjnnjbogbjikhnkebppfedankbdkk">Leppard</a>, a Chrome extension, does that for Spotify.

<hr>

<img src="/img/ghetto_blaster.png" style='width:100%' />

You know, I don't feel that connected to music right now. There are probably a lot of reasons for that, but I want to zoom in on just one: my interface with it.

<hr>

##Teachers

Music technology is full of iconic designs.

Winamp:

<img src="/img/winamp.png" style="width:60%; left:20%; position:relative" />

Napster:

<img src="/img/napster.gif" style="width:60%; left:20%; position:relative" />

Napster (2000) compared to iTunes (2013):
<img src="/img/itunes_napster_comparison.png" style="width:100%; left:0%; position:relative" />

Sony Walkman (1/2 market share for ten years):

<img src="/img/walkman.jpg" style="width:40%; left:30%; position:relative" />

iPod:

<img src="/img/ipod.jpg" style="width:40%; left:30%; position:relative" />

<hr>

What do they all have in common? I want to touch them, dammit! So here's a hypothesis: design winners in music depend on the tactile sense. The images above also suggests that music winners win big.

<hr>

Now, here's my music player of choice, with the percentage of the screen devoted to playing music (clicking it has an impact on what I hear) highlighted in green:

<img src="/img/spotify_green.png" style="width:100%" />

About 2% of the screen actually controls what I hear. In other words, a very small portion of the interface connects touch with sound.

While that's __exactly__ the screen I see when I visit play.spotify.com, it's only fair to look at a more traditional playlist view:

<img src="/img/spotify_2.png" style="width:100%" />

15% of the screen controls the song.

And of course it's not just Spotify. Check out Rdio:

<img src="/img/rdio.png" style="width:100%" />

Less than 1% of the screen controls what I hear.  

And this isn't just the difference between hardware and software. Compare to the iTunes UI, arguably the incumbent: 

<img src="/img/itunes.png" style="width: 100%;" />

A full 60% of the screen controls what's playing.

<hr>

##Point?

<a target="_blank" href="https://chrome.google.com/webstore/detail/leppard/elinjnnjbogbjikhnkebppfedankbdkk"><img src='/img/leppard.png' style="width:100%" /></a>

The upshot is <a target="_blank" href="https://chrome.google.com/webstore/detail/leppard/elinjnnjbogbjikhnkebppfedankbdkk">Leppard</a>, a Chrome extension that provides an alternate view of Spotify playlists. If you use __play.spotify__ just click the leppard icon in the address bar to toggle between the normal view and the leppard view.

Why not <a target="_blank" href="https://chrome.google.com/webstore/detail/leppard/elinjnnjbogbjikhnkebppfedankbdkk"><button>install</button></a> it?

<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style ">
<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
<a class="addthis_button_tweet"></a>
<a class="addthis_counter addthis_pill_style"></a>
</div>
<script type="text/javascript">var addthis_config = {"data_track_addressbar":true};</script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-50c9eb264657aaed"></script>
<!-- AddThis Button END -->


</div>
</body>
</html>
